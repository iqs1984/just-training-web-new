<?php

namespace App\Model;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsToMany;
use Shridhar\EloquentFiles\File;
use Shridhar\EloquentFiles\HasFile;

class Message extends Model {

    protected $appends = ['image'];

    protected static function boot() {
        parent::boot(); // TODO: Change the autogenerated stub
        static::updating(function ($model) {
            $notification = $model->notification;
            if ($notification) {
                $notification->title = $this->title;
                $notification->description = $this->description;
                $notification->save();
            }
        });
    }


    use HasFile;


    public function receivers() {
        return $this->belongsToMany(Player::class, 'message_receivers', 'message_id', 'receiver_id');
    }

    /**
     * @return BelongsToMany
     */
    function read_messages_player() {
        return $this->receivers()->wherePivot("seen_at", '!=', null);
    }

    /**
     * @return BelongsToMany
     */
    function unread_messages_player() {
        return $this->receivers()->wherePivot("seen_at", '=',null );
    }

    function notification() {
        return $this->belongsTo(Notification::class);
    }

    function groups() {
        return $this->belongsToMany(Group::class, "group_messages");
    }

    function inGroup($group_id) {
        return !!$this->groups()->whereId($group_id)->count();
    }

    function sendNotification() {

        $notification = Notification::make();
        $notification->title = $this->title;
        $notification->description = $this->description;

        $notification->data = [
            "message_id" => $this->id
        ];

        if ($this->image->url) {
            $notification->picture_url = $this->image->url;
        }

        $apps = $this->receivers->pluck("apps")->flatten();
        $notification->send($apps);
        return $this;
    }

    /**
     * @return File
     */
    function getImageAttribute() {
        return $this->file_info('image_path', [
            'default_url' => url('img/default-image.png')
        ]);
    }
}
